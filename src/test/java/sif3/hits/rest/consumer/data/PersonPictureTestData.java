package sif3.hits.rest.consumer.data;

import sif.dd.au30.model.*;
import sif.dd.au30.model.PersonPictureType.ParentObjectRefId;
import sif.dd.au30.model.PersonPictureType.PictureSource;
import sif3.hits.domain.converter.factory.IObjectFactory;
import sif3.hits.utils.RefIdGenerator;

import java.util.Arrays;
import java.util.List;

public class PersonPictureTestData extends TestData<PersonPictureType, PersonPictureCollectionType> {

    public static final String REF_ID_1 = "fef2a766-91fe-4514-a7ed-28b07e9aecd0";
    public static final String REF_ID_2 = "e39fdfc4-809b-41ae-ba9b-be8324f6f7db";
    public static final String REF_ID_3 = "d66efde2-f630-42e1-8f24-1593b1c95f94";
    public static final String REF_ID_4 = "6c20d9be-08e0-4505-aa51-391f52b12c16";
    public static final String REF_ID_5 = "41f7a60e-04f4-4cf2-affa-a0212957c201";

    public static final String[] REF_ID_RA = {REF_ID_1, REF_ID_2, REF_ID_3, REF_ID_4, REF_ID_5};
    public static final List<String> REF_ID_LIST = Arrays.asList(REF_ID_RA);

    public static final String XML_REF_ID_1 = "1ebc9ad7-2d2d-4972-9890-619c0c483fea";
    public static final String XML_REF_ID_2 = "b30cb544-66fa-485f-9a35-aa739d4ce354";

    public static final String[] XML_REF_ID_RA = {XML_REF_ID_1, XML_REF_ID_2};
    public static final List<String> XML_REF_ID_LIST = Arrays.asList(XML_REF_ID_RA);
    public static final String STUDENT_PERSONAL = "StudentPersonal";
    public static final String STAFF_PERSONAL = "StaffPersonal";


    public static final String BASE64_IMAGE = "";
    public static final String URL = "http://www.gravatar.com/avatar/HASH?d=mm";

    public static final String OK_TO_PUBLISH = "Y";
    public static final String NOT_OK_TO_PUBLISH = "N";
    public static final String URL_SOURCE = "01";
    public static final String BASE64_SOURCE = "02";
    public static final String SCHOOL_YEAR = "2019";


    public PersonPictureType getTestObject(String refId) {
        IObjectFactory objectFactory = getObjectFactory();

        PersonPictureType personPicture = new PersonPictureType();
        personPicture.setRefId(refId);
        ParentObjectRefId parentObjectRefId = objectFactory.createPersonPictureTypeParentObjectRefId();
        String okToPublish = OK_TO_PUBLISH;
        parentObjectRefId.setSIFRefObject(STUDENT_PERSONAL);
        parentObjectRefId.setValue(StudentPersonalTestData.REF_ID_4);

        PictureSource pictureSource = objectFactory.createPersonPictureTypePictureSource();
        pictureSource.setType(AUCodeSetsPictureSourceType.fromValue(URL_SOURCE));
        pictureSource.setValue(URL);

        if (REF_ID_1.equals(refId)) {
            parentObjectRefId.setValue(StudentPersonalTestData.REF_ID_1);
        } else if (REF_ID_2.equals(refId)) {
            parentObjectRefId.setValue(StudentPersonalTestData.REF_ID_2);
        } else if (REF_ID_3.equals(refId)) {
            parentObjectRefId.setSIFRefObject(STAFF_PERSONAL);
            parentObjectRefId.setValue(StaffPersonalTestData.REF_ID_1);
        } else if (REF_ID_4.equals(refId)) {
            parentObjectRefId.setSIFRefObject(STAFF_PERSONAL);
            parentObjectRefId.setValue(StaffPersonalTestData.REF_ID_2);
            pictureSource.setType(AUCodeSetsPictureSourceType.fromValue(BASE64_SOURCE));
            pictureSource.setValue(BASE64_IMAGE);
        } else if (REF_ID_5.equals(refId)) {
            parentObjectRefId.setValue(StudentPersonalTestData.REF_ID_5);
            pictureSource.setType(AUCodeSetsPictureSourceType.fromValue(BASE64_SOURCE));
            pictureSource.setValue(BASE64_IMAGE);
            okToPublish = NOT_OK_TO_PUBLISH;
        }

        personPicture.setOKToPublish(objectFactory.createPersonPictureTypeOKToPublish(AUCodeSetsYesOrNoCategoryType.fromValue(okToPublish)));
        personPicture.setParentObjectRefId(parentObjectRefId);
        personPicture.setPictureSource(pictureSource);
        personPicture.setSchoolYear(getDate(SCHOOL_YEAR));

        PublishingPermissionListType publishingPermissionListType = objectFactory.createPublishingPermissionListType();
        for (int i = 0; i < AUCodeSetsPermissionCategoryCodeType.values().length; i++) {
            PublishingPermissionType publishingPermission = objectFactory.createPublishingPermissionType();
            publishingPermission.setPermissionValue(AUCodeSetsYesOrNoCategoryType.fromValue(okToPublish));
            publishingPermission.setPermissionCategory(AUCodeSetsPermissionCategoryCodeType.values()[i]);
            publishingPermissionListType.getPublishingPermission().add(publishingPermission);
        }
        personPicture.setPublishingPermissionList(objectFactory.createPersonPictureTypePublishingPermissionList(publishingPermissionListType));
        return personPicture;
    }

    @Override
    public List<PersonPictureType> getExamplesForQuery() {
        PersonPictureType example = new PersonPictureType();
        ParentObjectRefId refId = new ParentObjectRefId();
        refId.setValue(StudentPersonalTestData.REF_ID_1);
        refId.setSIFRefObject(STUDENT_PERSONAL);
        example.setParentObjectRefId(refId);
        return Arrays.asList(example);
    }

    @Override
    public boolean isExampleObject(PersonPictureType object, int index) {
        return object != null && object.getParentObjectRefId() != null && StudentPersonalTestData.REF_ID_1.equals(object.getParentObjectRefId().getValue()) && STUDENT_PERSONAL.equals(object.getParentObjectRefId().getSIFRefObject());
    }

    public String getRefId(int index) {
        String result = null;
        if (index >= 0 && index < REF_ID_RA.length) {
            result = REF_ID_RA[index];
        } else {
            result = RefIdGenerator.getRefId();
        }
        return result;
    }

    public PersonPictureCollectionType getTestCollection(String... refIds) {
        PersonPictureCollectionType result = new PersonPictureCollectionType();
        for (int i = 0; refIds != null && i < refIds.length; i++) {
            result.getPersonPicture().add(getTestObject(refIds[i]));
        }
        return result;
    }

    public String getSingleObjectXMLFilename() {
        return "PersonPicture.xml";
    }

    public String getMultiObjectXMLFilename() {
        return "PersonPictures.xml";
    }

}

